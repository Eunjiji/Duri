<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Member">
	<resultMap type="com.kh.duri.member.model.vo.Member" id="memberResultSet">
	<!-- property=컬럼명, column=필드명    반드시 일치! -->
		<id property="mno" column="MNO"></id>
		<result property="mName" column="MNAME"/>
		<result property="mNickName" column="MNICK"/>
		<result property="mGender" column="MGENDER"/>
		<result property="mPhone" column="MPHONE"/>
		<result property="mid" column="MID"/>
		<result property="mpwd" column="MPWD"/>
		<result property="email" column="MEMAIL"/>
		<result property="mEnrollDate" column="MENROLLDATE"/>
		<result property="mPoint" column="MPOINT"/>
		<result property="mtype" column="MTYPE"/>
		<result property="mFundtype" column="MFUNDTYPE"/>
		<result property="mpr" column="MPR"/>
		<result property="mprNew" column="MPRNEW"/>
		<result property="mBirthDay" column="MBIRTHDAY"/>
		<result property="mAddress" column="MADDRESS"/>
		<result property="mAcceptDate" column="MACCEPTDATE"/>
		<result property="mGoalNum" column="MGOALNUM"/>
		<result property="mStatus" column="MSTATUS"/>
		<result property="mTakeStatus" column="MTAKESTATUS"/>
		<result property="dMoney" column="DHVALUE"/>
      	<result property="cfMoney" column="FHVALUE"/>
      	<result property="origin" column="AORIGINNAME"/>
      	<result property="change" column="ACHANGENAME"/>
	</resultMap>
	
	<select id="loginCheck" resultMap="memberResultSet" parameterType="Member">
		<!-- 로그인 함과 동시에 정기후원 금액, 일시후원 받은 총 누적액 불러오기 -->
		SELECT MNO, MNAME, MNICK ,MGENDER ,MPHONE ,MID ,MPWD ,MEMAIL 
		,MENROLLDATE ,MPOINT ,MTYPE ,MFUNDTYPE ,MPR ,MPRNEW ,MBIRTHDAY 
		,MADDRESS ,MACCEPTDATE ,MGOALNUM ,MSTATUS ,MTAKESTATUS 
        ,(SELECT SUM(DHVALUE) FROM MEMBER M  INNER JOIN DIRECTFUNDHISTORY DI ON(M.MNO = DI.DH_MNO_TAKE) 
        	WHERE M.MID=#{mid}) AS DHVALUE
        ,(SELECT SUM(FHVALUE) FROM MEMBER M JOIN FUNDHISTORY FH ON(FH.FH_MNO_GIVE = M.MNO) JOIN FUNDING F ON(F.FNO = FH.FH_FNO) 
        	WHERE F.FWRITER=(SELECT MNO FROM MEMBER WHERE MID=#{mid}))AS FHVALUE
		FROM MEMBER
		WHERE MID=#{mid}
		AND MPWD=#{mpwd}
	</select>
	
	<!-- 로그인 나눔두리 -->
	<select id="loginNaCheck" resultMap="memberResultSet" parameterType="Member">
		SELECT *
		FROM MEMBER
		WHERE MID=#{mid}
		AND MPWD=#{mpwd}
	</select>
	
	<select id="selectDonateList" resultMap="memberResultSet" parameterType="Member">
		SELECT MNO,MNICK,MFUNDTYPE, MPR,MADDRESS 
		FROM MEMBER
		WHERE MTAKESTATUS = '1'
		OR MTAKESTATUS = '2'
	</select>
	
		<!-- 나눔두리 - 포인트 이력 수 세기 -->
	<select id="selectDonateListCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MTAKESTATUS = '1'
		OR MTAKESTATUS = '2'
	</select>
	
	<!-- 정기후원 리스트 조회 -->
	<select id="selectLongList" resultMap="memberResultSet" resultType="Member">
		SELECT *
		FROM MEMBER
		WHERE MNO = #{mno}
	</select>
	
	
	<!-- 아이디 중복확인 -->
	<select id="userIdCheck" parameterType="java.lang.String" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
      	WHERE MID = #{mid2}
	</select>
	
	<!-- 닉네임 중복확인 -->
	<select id="NickCheck" parameterType="java.lang.String" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
      	WHERE MNICK = #{mNick}
	</select>
	
	

	<!-- 나눔두리 회원가입 -->
	<insert id="insertNanum">
	INSERT INTO MEMBER
	VALUES (SEQ_M_NO.NEXTVAL, #{mName}, #{mNickName},#{mGender}, #{mPhone}, #{mid}, #{mpwd}, #{email}, SYSDATE, 0, 'N', null, null, null, null, null, null, null, 0, 'Y', null)
	</insert>
	
	<!-- 로그인시 암호화된 비밀번호 가져오기 - 나눔두리 -->
	<select id="selectPwd" parameterType="java.lang.String"  resultType="String" >
		SELECT MPWD
		FROM MEMBER
		WHERE MID = #{mid}
	</select> 
	
	<!-- 로그인시 암호화된 비밀번호 가져오기 - 행복두리 -->
	<select id="selectPwd2" parameterType="java.lang.String"  resultType="String" >
		SELECT MPWD
		FROM MEMBER
		WHERE MID = #{mid}
	</select> 
	
	<!-- 행복두리 회원가입 -->
	<insert id="insertHappy">
	INSERT INTO MEMBER
	VALUES (SEQ_M_NO.NEXTVAL, #{mName}, #{mNickName},#{mGender}, #{mPhone}, #{mid}, #{mpwd}, #{email}, SYSDATE, 0, 'H', #{mFundtype}, #{mpr}, null, null, #{mAddress}, null, null, 0, 'Y', 3)
	</insert>
	
	<!-- 행복두리 회원번호 받아오기 -->
	<select id="selectMnoCurrval" resultType="_int">
		SELECT SEQ_M_NO.CURRVAL FROM DUAL
	</select>
	
	<!-- 행복두리 증빙서류 삽입 -->
	<insert id="insertHappyPhoto">
	INSERT INTO ATTACHMENT
	VALUES (SEQ_A_NO.NEXTVAL,#{origin},#{change},null,'formFiles',#{mno},'1','F')
	</insert>
	
	<!-- 행복두리 회원수정 -->
	<update id="updateHappy">
		UPDATE MEMBER
		SET MPHONE = #{mPhone} , MPWD = #{mpwd} ,MGENDER = #{mGender}
		WHERE MID = #{mid} 
	</update>
	
	<select id="findId" parameterType="java.lang.String"  resultType="String" >
		SELECT MID
		FROM MEMBER
		WHERE MNICK = #{mNickName}
		AND MEMAIL = #{email}
	</select> 
	
	<update id="updatePass">
		UPDATE MEMBER
		SET MPWD = #{mpwd}
		WHERE MID = #{mid} 
	</update>
	
</mapper>







